// led gamma g=1.5 if else gamma is generated on startup

int gamma10[1024] = {
  0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,
  7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 16, 16, 16,
  17, 17, 18, 18, 18, 19, 19, 20, 20, 20, 21, 21, 22, 22, 22, 23, 23, 24, 24, 25, 25, 25, 26, 26, 27, 27, 28,
  28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41,
  41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 55, 55, 56,
  56, 57, 57, 58, 59, 59, 60, 60, 61, 62, 62, 63, 63, 64, 64, 65, 66, 66, 67, 67, 68, 69, 69, 70, 71, 71, 72, 72, 73,
  74, 74, 75, 76, 76, 77, 77, 78, 79, 79, 80, 81, 81, 82, 83, 83, 84, 84, 85, 86, 86, 87, 88, 88, 89, 90, 90, 91, 92,
  92, 93, 94, 94, 95, 96, 97, 97, 98, 99, 99, 100, 101, 101, 102, 103, 103, 104, 105, 106, 106, 107, 108, 108, 109, 110,
  110, 111, 112, 113, 113, 114, 115, 116, 116, 117, 118, 118, 119, 120, 121, 121, 122, 123, 124, 124, 125, 126, 127, 127,
  128, 129, 130, 130, 131, 132, 133, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 142, 143, 143, 144, 145, 146,
  146, 147, 148, 149, 150, 150, 151, 152, 153, 154, 154, 155, 156, 157, 158, 158, 159, 160, 161, 162, 162, 163, 164, 165,
  166, 167, 167, 168, 169, 170, 171, 171, 172, 173, 174, 175, 176, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185,
  186, 187, 187, 188, 189, 190, 191, 192, 193, 193, 194, 195, 196, 197, 198, 199, 199, 200, 201, 202, 203, 204, 205, 206,
  206, 207, 208, 209, 210, 211, 212, 213, 214, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 223, 224, 225, 226, 227,
  228, 229, 230, 231, 232, 233, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 245, 246, 247, 248, 249,
  250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
  273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 293, 294, 295,
  296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320,
  321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344,
  345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370,
  371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396,
  397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422,
  423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449,
  450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477,
  478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 505,
  506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534,
  535, 536, 537, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563,
  564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593,
  594, 595, 596, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623,
  624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 652, 654,
  655, 656, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 684, 685,
  686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717,
  718, 719, 721, 722, 723, 725, 726, 727, 729, 730, 731, 733, 734, 735, 737, 738, 740, 741, 742, 744, 745, 746, 748, 749,
  750, 752, 753, 754, 756, 757, 758, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 773, 775, 776, 778, 779, 780, 782,
  783, 784, 786, 787, 789, 790, 791, 793, 794, 795, 797, 798, 800, 801, 802, 804, 805, 806, 808, 809, 811, 812, 813, 815,
  816, 818, 819, 820, 822, 823, 825, 826, 827, 829, 830, 832, 833, 834, 836, 837, 839, 840, 841, 843, 844, 846, 847, 848,
  850, 851, 853, 854, 855, 857, 858, 860, 861, 863, 864, 865, 867, 868, 870, 871, 872, 874, 875, 877, 878, 880, 881, 882,
  884, 885, 887, 888, 890, 891, 892, 894, 895, 897, 898, 900, 901, 902, 904, 905, 907, 908, 910, 911, 913, 914, 915, 917,
  918, 920, 921, 923, 924, 926, 927, 929, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 945, 946, 947, 949, 950, 952,
  953, 955, 956, 958, 959, 961, 962, 964, 965, 967, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 986, 987,
  989, 990, 992, 993, 995, 996, 998, 999, 1001, 1002, 1004, 1005, 1007, 1008, 1010, 1011, 1013, 1014, 1016, 1017, 1019,
  1020, 1022, 1023
};
void create_gamma (float gamma) {

  for (long i = 0; i <= 1023; i++) {
    gamma10[i] = map((long)pow(i, gamma), 0, (long)pow(1023, gamma), 0, 1023);
  }

  Serial.println("Gamma generated...");
}
